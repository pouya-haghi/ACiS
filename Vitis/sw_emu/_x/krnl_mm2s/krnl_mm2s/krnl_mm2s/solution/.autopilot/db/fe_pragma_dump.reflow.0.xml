<pragmas>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="69" pragmaType="pipeline" parentfunction="krnl_mm2s" off="0" ii="1" rewind="0" style=""/>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="55" pragmaType="interface" parentfunction="krnl_mm2s" mode="m_axi" port="in" bundle="gmem" offset="slave" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="56" pragmaType="interface" parentfunction="krnl_mm2s" mode="axis" port="k2n" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="57" pragmaType="interface" parentfunction="krnl_mm2s" mode="s_axilite" port="in" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="58" pragmaType="interface" parentfunction="krnl_mm2s" mode="s_axilite" port="size" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="59" pragmaType="interface" parentfunction="krnl_mm2s" mode="s_axilite" port="dest" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="60" pragmaType="interface" parentfunction="krnl_mm2s" mode="s_axilite" port="" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="/home/Will/Documents/Research-Files/G-FPin_HW/Vitis/sw_emu/src/krnl_mm2s.cpp" line="69" pragmaType="latency" parentfunction="krnl_mm2s" min="1" max="1000"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h" line="301" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int.h" line="321" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int.h" line="321" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int.h" line="322" pragmaType="inline" parentfunction="ap_uint<16>::ap_uint(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<1, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h" line="121" pragmaType="inline" parentfunction="get_user_ptr" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h" line="125" pragmaType="inline" parentfunction="get_id_ptr" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h" line="129" pragmaType="inline" parentfunction="get_dest_ptr" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int.h" line="219" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int.h" line="219" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<16, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h" line="734" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<512, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int.h" line="219" pragmaType="inline" parentfunction="ap_uint<512>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int.h" line="219" pragmaType="inline" parentfunction="ap_uint<16>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<512, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<16, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h" line="734" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h" line="734" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
