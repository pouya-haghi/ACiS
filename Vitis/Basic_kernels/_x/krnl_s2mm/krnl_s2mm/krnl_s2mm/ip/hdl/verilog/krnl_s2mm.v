// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="krnl_s2mm_krnl_s2mm,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=2333,HLS_SYN_LUT=2467,HLS_VERSION=2021_2}" *)

module krnl_s2mm (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        n2k_TDATA,
        n2k_TVALID,
        n2k_TREADY,
        n2k_TKEEP,
        n2k_TSTRB,
        n2k_TUSER,
        n2k_TLAST,
        n2k_TID,
        n2k_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 72'd1;
parameter    ap_ST_fsm_state2 = 72'd2;
parameter    ap_ST_fsm_state3 = 72'd4;
parameter    ap_ST_fsm_state4 = 72'd8;
parameter    ap_ST_fsm_state5 = 72'd16;
parameter    ap_ST_fsm_state6 = 72'd32;
parameter    ap_ST_fsm_state7 = 72'd64;
parameter    ap_ST_fsm_state8 = 72'd128;
parameter    ap_ST_fsm_state9 = 72'd256;
parameter    ap_ST_fsm_state10 = 72'd512;
parameter    ap_ST_fsm_state11 = 72'd1024;
parameter    ap_ST_fsm_state12 = 72'd2048;
parameter    ap_ST_fsm_state13 = 72'd4096;
parameter    ap_ST_fsm_state14 = 72'd8192;
parameter    ap_ST_fsm_state15 = 72'd16384;
parameter    ap_ST_fsm_state16 = 72'd32768;
parameter    ap_ST_fsm_state17 = 72'd65536;
parameter    ap_ST_fsm_state18 = 72'd131072;
parameter    ap_ST_fsm_state19 = 72'd262144;
parameter    ap_ST_fsm_state20 = 72'd524288;
parameter    ap_ST_fsm_state21 = 72'd1048576;
parameter    ap_ST_fsm_state22 = 72'd2097152;
parameter    ap_ST_fsm_state23 = 72'd4194304;
parameter    ap_ST_fsm_state24 = 72'd8388608;
parameter    ap_ST_fsm_state25 = 72'd16777216;
parameter    ap_ST_fsm_state26 = 72'd33554432;
parameter    ap_ST_fsm_state27 = 72'd67108864;
parameter    ap_ST_fsm_state28 = 72'd134217728;
parameter    ap_ST_fsm_state29 = 72'd268435456;
parameter    ap_ST_fsm_state30 = 72'd536870912;
parameter    ap_ST_fsm_state31 = 72'd1073741824;
parameter    ap_ST_fsm_state32 = 72'd2147483648;
parameter    ap_ST_fsm_state33 = 72'd4294967296;
parameter    ap_ST_fsm_state34 = 72'd8589934592;
parameter    ap_ST_fsm_state35 = 72'd17179869184;
parameter    ap_ST_fsm_state36 = 72'd34359738368;
parameter    ap_ST_fsm_state37 = 72'd68719476736;
parameter    ap_ST_fsm_state38 = 72'd137438953472;
parameter    ap_ST_fsm_state39 = 72'd274877906944;
parameter    ap_ST_fsm_state40 = 72'd549755813888;
parameter    ap_ST_fsm_state41 = 72'd1099511627776;
parameter    ap_ST_fsm_state42 = 72'd2199023255552;
parameter    ap_ST_fsm_state43 = 72'd4398046511104;
parameter    ap_ST_fsm_state44 = 72'd8796093022208;
parameter    ap_ST_fsm_state45 = 72'd17592186044416;
parameter    ap_ST_fsm_state46 = 72'd35184372088832;
parameter    ap_ST_fsm_state47 = 72'd70368744177664;
parameter    ap_ST_fsm_state48 = 72'd140737488355328;
parameter    ap_ST_fsm_state49 = 72'd281474976710656;
parameter    ap_ST_fsm_state50 = 72'd562949953421312;
parameter    ap_ST_fsm_state51 = 72'd1125899906842624;
parameter    ap_ST_fsm_state52 = 72'd2251799813685248;
parameter    ap_ST_fsm_state53 = 72'd4503599627370496;
parameter    ap_ST_fsm_state54 = 72'd9007199254740992;
parameter    ap_ST_fsm_state55 = 72'd18014398509481984;
parameter    ap_ST_fsm_state56 = 72'd36028797018963968;
parameter    ap_ST_fsm_state57 = 72'd72057594037927936;
parameter    ap_ST_fsm_state58 = 72'd144115188075855872;
parameter    ap_ST_fsm_state59 = 72'd288230376151711744;
parameter    ap_ST_fsm_state60 = 72'd576460752303423488;
parameter    ap_ST_fsm_state61 = 72'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 72'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 72'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 72'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 72'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 72'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 72'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 72'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 72'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 72'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 72'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 72'd2361183241434822606848;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input  [511:0] n2k_TDATA;
input   n2k_TVALID;
output   n2k_TREADY;
input  [63:0] n2k_TKEEP;
input  [63:0] n2k_TSTRB;
input  [0:0] n2k_TUSER;
input  [0:0] n2k_TLAST;
input  [0:0] n2k_TID;
input  [15:0] n2k_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [71:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] out_r;
wire   [31:0] size;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state2;
reg   [0:0] icmp_ln66_reg_180;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state72;
reg   [63:0] out_r_read_reg_169;
wire   [25:0] div_fu_129_p4;
reg   [25:0] div_reg_174;
wire   [0:0] icmp_ln66_fu_139_p2;
wire  signed [57:0] trunc_ln_fu_149_p4;
reg   [57:0] trunc_ln_reg_184;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_done;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_idle;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_ready;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWVALID;
wire   [63:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWADDR;
wire   [0:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWID;
wire   [31:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWLEN;
wire   [2:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWSIZE;
wire   [1:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWBURST;
wire   [1:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWLOCK;
wire   [3:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWCACHE;
wire   [2:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWPROT;
wire   [3:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWQOS;
wire   [3:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWREGION;
wire   [0:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWUSER;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WVALID;
wire   [511:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WDATA;
wire   [63:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WSTRB;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WLAST;
wire   [0:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WID;
wire   [0:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WUSER;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARVALID;
wire   [63:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARADDR;
wire   [0:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARID;
wire   [31:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARLEN;
wire   [2:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARSIZE;
wire   [1:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARBURST;
wire   [1:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARLOCK;
wire   [3:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARCACHE;
wire   [2:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARPROT;
wire   [3:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARQOS;
wire   [3:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARREGION;
wire   [0:0] grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARUSER;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_RREADY;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_BREADY;
wire    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_n2k_TREADY;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [63:0] gmem_AWADDR;
reg   [0:0] gmem_AWID;
reg   [31:0] gmem_AWLEN;
reg   [2:0] gmem_AWSIZE;
reg   [1:0] gmem_AWBURST;
reg   [1:0] gmem_AWLOCK;
reg   [3:0] gmem_AWCACHE;
reg   [2:0] gmem_AWPROT;
reg   [3:0] gmem_AWQOS;
reg   [3:0] gmem_AWREGION;
reg   [0:0] gmem_AWUSER;
reg    gmem_WVALID;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [511:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [8:0] gmem_RFIFONUM;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg    grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire  signed [63:0] sext_ln66_fu_158_p1;
reg    ap_block_state2_io;
wire   [31:0] div_cast_fu_145_p1;
reg    ap_block_state72;
reg    ap_block_state1;
reg   [71:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
reg    ap_ST_fsm_state72_blk;
wire    regslice_both_n2k_V_data_V_U_apdone_blk;
wire   [511:0] n2k_TDATA_int_regslice;
wire    n2k_TVALID_int_regslice;
reg    n2k_TREADY_int_regslice;
wire    regslice_both_n2k_V_data_V_U_ack_in;
wire    regslice_both_n2k_V_keep_V_U_apdone_blk;
wire   [63:0] n2k_TKEEP_int_regslice;
wire    regslice_both_n2k_V_keep_V_U_vld_out;
wire    regslice_both_n2k_V_keep_V_U_ack_in;
wire    regslice_both_n2k_V_strb_V_U_apdone_blk;
wire   [63:0] n2k_TSTRB_int_regslice;
wire    regslice_both_n2k_V_strb_V_U_vld_out;
wire    regslice_both_n2k_V_strb_V_U_ack_in;
wire    regslice_both_n2k_V_user_V_U_apdone_blk;
wire   [0:0] n2k_TUSER_int_regslice;
wire    regslice_both_n2k_V_user_V_U_vld_out;
wire    regslice_both_n2k_V_user_V_U_ack_in;
wire    regslice_both_n2k_V_last_V_U_apdone_blk;
wire   [0:0] n2k_TLAST_int_regslice;
wire    regslice_both_n2k_V_last_V_U_vld_out;
wire    regslice_both_n2k_V_last_V_U_ack_in;
wire    regslice_both_n2k_V_id_V_U_apdone_blk;
wire   [0:0] n2k_TID_int_regslice;
wire    regslice_both_n2k_V_id_V_U_vld_out;
wire    regslice_both_n2k_V_id_V_U_ack_in;
wire    regslice_both_n2k_V_dest_V_U_apdone_blk;
wire   [15:0] n2k_TDEST_int_regslice;
wire    regslice_both_n2k_V_dest_V_U_vld_out;
wire    regslice_both_n2k_V_dest_V_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 72'd1;
#0 grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start_reg = 1'b0;
end

krnl_s2mm_krnl_s2mm_Pipeline_VITIS_LOOP_66_1 grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start),
    .ap_done(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_done),
    .ap_idle(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_idle),
    .ap_ready(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_ready),
    .n2k_TVALID(n2k_TVALID_int_regslice),
    .m_axi_gmem_AWVALID(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(512'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(9'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .sext_ln66(trunc_ln_reg_184),
    .div(div_reg_174),
    .n2k_TDATA(n2k_TDATA_int_regslice),
    .n2k_TREADY(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_n2k_TREADY),
    .n2k_TKEEP(n2k_TKEEP_int_regslice),
    .n2k_TSTRB(n2k_TSTRB_int_regslice),
    .n2k_TUSER(n2k_TUSER_int_regslice),
    .n2k_TLAST(n2k_TLAST_int_regslice),
    .n2k_TID(n2k_TID_int_regslice),
    .n2k_TDEST(n2k_TDEST_int_regslice)
);

krnl_s2mm_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .out_r(out_r),
    .size(size),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

krnl_s2mm_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(gmem_AWID),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(gmem_AWSIZE),
    .I_AWLOCK(gmem_AWLOCK),
    .I_AWCACHE(gmem_AWCACHE),
    .I_AWQOS(gmem_AWQOS),
    .I_AWPROT(gmem_AWPROT),
    .I_AWUSER(gmem_AWUSER),
    .I_AWBURST(gmem_AWBURST),
    .I_AWREGION(gmem_AWREGION),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WDATA),
    .I_WID(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WID),
    .I_WUSER(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WUSER),
    .I_WLAST(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WLAST),
    .I_WSTRB(grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

krnl_s2mm_regslice_both #(
    .DataWidth( 512 ))
regslice_both_n2k_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(n2k_TDATA),
    .vld_in(n2k_TVALID),
    .ack_in(regslice_both_n2k_V_data_V_U_ack_in),
    .data_out(n2k_TDATA_int_regslice),
    .vld_out(n2k_TVALID_int_regslice),
    .ack_out(n2k_TREADY_int_regslice),
    .apdone_blk(regslice_both_n2k_V_data_V_U_apdone_blk)
);

krnl_s2mm_regslice_both #(
    .DataWidth( 64 ))
regslice_both_n2k_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(n2k_TKEEP),
    .vld_in(n2k_TVALID),
    .ack_in(regslice_both_n2k_V_keep_V_U_ack_in),
    .data_out(n2k_TKEEP_int_regslice),
    .vld_out(regslice_both_n2k_V_keep_V_U_vld_out),
    .ack_out(n2k_TREADY_int_regslice),
    .apdone_blk(regslice_both_n2k_V_keep_V_U_apdone_blk)
);

krnl_s2mm_regslice_both #(
    .DataWidth( 64 ))
regslice_both_n2k_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(n2k_TSTRB),
    .vld_in(n2k_TVALID),
    .ack_in(regslice_both_n2k_V_strb_V_U_ack_in),
    .data_out(n2k_TSTRB_int_regslice),
    .vld_out(regslice_both_n2k_V_strb_V_U_vld_out),
    .ack_out(n2k_TREADY_int_regslice),
    .apdone_blk(regslice_both_n2k_V_strb_V_U_apdone_blk)
);

krnl_s2mm_regslice_both #(
    .DataWidth( 1 ))
regslice_both_n2k_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(n2k_TUSER),
    .vld_in(n2k_TVALID),
    .ack_in(regslice_both_n2k_V_user_V_U_ack_in),
    .data_out(n2k_TUSER_int_regslice),
    .vld_out(regslice_both_n2k_V_user_V_U_vld_out),
    .ack_out(n2k_TREADY_int_regslice),
    .apdone_blk(regslice_both_n2k_V_user_V_U_apdone_blk)
);

krnl_s2mm_regslice_both #(
    .DataWidth( 1 ))
regslice_both_n2k_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(n2k_TLAST),
    .vld_in(n2k_TVALID),
    .ack_in(regslice_both_n2k_V_last_V_U_ack_in),
    .data_out(n2k_TLAST_int_regslice),
    .vld_out(regslice_both_n2k_V_last_V_U_vld_out),
    .ack_out(n2k_TREADY_int_regslice),
    .apdone_blk(regslice_both_n2k_V_last_V_U_apdone_blk)
);

krnl_s2mm_regslice_both #(
    .DataWidth( 1 ))
regslice_both_n2k_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(n2k_TID),
    .vld_in(n2k_TVALID),
    .ack_in(regslice_both_n2k_V_id_V_U_ack_in),
    .data_out(n2k_TID_int_regslice),
    .vld_out(regslice_both_n2k_V_id_V_U_vld_out),
    .ack_out(n2k_TREADY_int_regslice),
    .apdone_blk(regslice_both_n2k_V_id_V_U_apdone_blk)
);

krnl_s2mm_regslice_both #(
    .DataWidth( 16 ))
regslice_both_n2k_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(n2k_TDEST),
    .vld_in(n2k_TVALID),
    .ack_in(regslice_both_n2k_V_dest_V_U_ack_in),
    .data_out(n2k_TDEST_int_regslice),
    .vld_out(regslice_both_n2k_V_dest_V_U_vld_out),
    .ack_out(n2k_TREADY_int_regslice),
    .apdone_blk(regslice_both_n2k_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((gmem_BVALID == 1'b0) & (icmp_ln66_reg_180 == 1'd0)) & (1'b1 == ap_CS_fsm_state72))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_ready == 1'b1)) begin
            grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        div_reg_174 <= {{size[31:6]}};
        icmp_ln66_reg_180 <= icmp_ln66_fu_139_p2;
        out_r_read_reg_169 <= out_r;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln66_reg_180 == 1'd0))) begin
        trunc_ln_reg_184 <= {{out_r_read_reg_169[63:6]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_io)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

always @ (*) begin
    if ((grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

always @ (*) begin
    if (((gmem_BVALID == 1'b0) & (icmp_ln66_reg_180 == 1'd0))) begin
        ap_ST_fsm_state72_blk = 1'b1;
    end else begin
        ap_ST_fsm_state72_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (icmp_ln66_reg_180 == 1'd0)) & (1'b1 == ap_CS_fsm_state72))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (icmp_ln66_reg_180 == 1'd0)) & (1'b1 == ap_CS_fsm_state72))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (icmp_ln66_reg_180 == 1'd0))) begin
        gmem_AWADDR = sext_ln66_fu_158_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWADDR = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWADDR;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWBURST = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWBURST;
    end else begin
        gmem_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWCACHE = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWCACHE;
    end else begin
        gmem_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWID = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWID;
    end else begin
        gmem_AWID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (icmp_ln66_reg_180 == 1'd0))) begin
        gmem_AWLEN = div_cast_fu_145_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWLEN = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWLEN;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWLOCK = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWLOCK;
    end else begin
        gmem_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWPROT = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWPROT;
    end else begin
        gmem_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWQOS = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWQOS;
    end else begin
        gmem_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWREGION = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWREGION;
    end else begin
        gmem_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWSIZE = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWSIZE;
    end else begin
        gmem_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWUSER = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWUSER;
    end else begin
        gmem_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (icmp_ln66_reg_180 == 1'd0))) begin
        gmem_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWVALID = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_BVALID == 1'b0) & (icmp_ln66_reg_180 == 1'd0)) & (1'b1 == ap_CS_fsm_state72) & (icmp_ln66_reg_180 == 1'd0))) begin
        gmem_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_BREADY = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_WVALID = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_m_axi_gmem_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln66_reg_180 == 1'd0))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) & (icmp_ln66_reg_180 == 1'd0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        n2k_TREADY_int_regslice = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_n2k_TREADY;
    end else begin
        n2k_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (icmp_ln66_reg_180 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io) & (icmp_ln66_reg_180 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if ((~((gmem_BVALID == 1'b0) & (icmp_ln66_reg_180 == 1'd0)) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((gmem_AWREADY == 1'b0) & (icmp_ln66_reg_180 == 1'd0));
end

always @ (*) begin
    ap_block_state72 = ((gmem_BVALID == 1'b0) & (icmp_ln66_reg_180 == 1'd0));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'd0;

assign div_cast_fu_145_p1 = div_reg_174;

assign div_fu_129_p4 = {{size[31:6]}};

assign grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start = grp_krnl_s2mm_Pipeline_VITIS_LOOP_66_1_fu_107_ap_start_reg;

assign icmp_ln66_fu_139_p2 = ((div_fu_129_p4 == 26'd0) ? 1'b1 : 1'b0);

assign n2k_TREADY = regslice_both_n2k_V_data_V_U_ack_in;

assign sext_ln66_fu_158_p1 = trunc_ln_fu_149_p4;

assign trunc_ln_fu_149_p4 = {{out_r_read_reg_169[63:6]}};

endmodule //krnl_s2mm
